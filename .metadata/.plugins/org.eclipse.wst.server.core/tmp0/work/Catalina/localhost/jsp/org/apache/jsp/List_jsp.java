/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.108
 * Generated at: 2025-09-09 02:35:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import lib.DB;

public final class List_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("lib.DB");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\r\n");

boolean is_login = false;
String login_id = "";
/*
Cookie[] cookies = request.getCookies();

if(cookies != null && cookies.length > 0){
   for(int i = 0; i < cookies.length; i++){
      
      if(cookies[i].getName().equals("login_check") && cookies[i].getValue().length() > 0)
      {
         is_login  = true;
         login_id = cookies[i].getValue();
         break;
      }
   }
}
*/
login_id = (String)session.getAttribute("ss_check");

//if(is_login == false)
if(login_id == null || login_id.equals(""))
{

      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("alert(\"로그인 하세요.\");\r\n");
      out.write("location.replace(\"Login.jsp\");\r\n");
      out.write("</script>\r\n");

	return;
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	String sql = "";
	Connection conn=null;
	Statement st = null;
	ResultSet rs = null;
	String key = request.getParameter("key");
	String word = request.getParameter("word");
	if (key == null) {key = "";}
	if (word == null) {word = "";}
	int totalp = 0; //총 페이지
	int scale = 10; //페이지 당 게시물---------------------------------------------------------------
	int offset = 0; //디비 오프셋
	double count =0; //
	String _page = request.getParameter("_page");
	if (_page == null) _page = "1";
	int now_page = Integer.parseInt(_page); //현재 페이지
	
	offset = (now_page-1)*scale ;

	try {
		conn = DB.getConnection();
		sql = "select count(*) as cnt from member";
		st = conn.createStatement();
		rs = st.executeQuery(sql);
		rs.next();
		count = rs.getDouble("cnt");
		double countt = Math.ceil(count/scale);
		totalp = (int)countt;
		
		}catch (Exception e) {
			out.println(sql);
		}
	
	//int page_size = 3;
	int page_scale = 10; // ----------------------------------------------------------------------
	int page_group = (int)Math.ceil((double)totalp/page_scale);
	int page_group_start = ((now_page-1)/page_scale)*page_scale+1;
	int page_group_end = page_group_start+page_scale-1;
    if (page_group_end>totalp) {
    	page_group_end=totalp;
    }
    
	String suid = request.getParameter("uid");

	try {
		conn = DB.getConnection();
		
		if(word != null && !word.equals("")) {
			sql = " SELECT count(*) as cnt from member where "+key+" like '%"+word+"%'";
		}else {
			sql = " SELECT count(*) as cnt from member ";
		}
		
	}catch (Exception e) {
		System.out.println(sql);
	}
	
		st = conn.createStatement();
	   	rs = st.executeQuery(sql);
	   	rs.next();
	   	count = rs.getInt("cnt");
	   	double dcount = count;
	   	int ccount = (int)count;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>List</title>\r\n");
      out.write("<style>\r\n");
      out.write("* {\r\n");
      out.write("margin : 0 auto;\r\n");
      out.write("text-align: center;\r\n");
      out.write("}\r\n");
      out.write("h1 {\r\n");
      out.write("margin : 20px;\r\n");
      out.write("}\n");
      out.write("td {\r\n");
      out.write("padding: 10px;\r\n");
      out.write("text-align: center;\r\n");
      out.write("}\r\n");
      out.write(".aa {\r\n");
      out.write("padding: 5px;\r\n");
      out.write("text-decoration: none;\r\n");
      out.write("color: green;\r\n");
      out.write("}\r\n");
      out.write(".aadisable {\r\n");
      out.write("color: gray;\r\n");
      out.write("}\r\n");
      out.write(".aaa {\r\n");
      out.write("font-size: 30px;\r\n");
      out.write("color: blue;\r\n");
      out.write("}\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

   //Connection conn=null;
   //Statement st = null;
   //ResultSet rs = null;
    
   //String sql = null;

  try{
    
    conn = DB.getConnection();
    //out.println("연결 성공");
    
   //쿼리문 작성
   if(word != null && !word.equals("")) {
      sql = " SELECT * from member where "+key+" like '%"+word+"%' ORDER BY idx desc limit "+offset+", "+scale;
   } else {
	   sql = " select * from member order by idx desc limit "+offset+"," + scale;
   }
   
   
   
   //Connection객체로부터 Statement객체를 얻어내는 코드
   st = conn.createStatement();
   
   rs = st.executeQuery(sql);
    
  }catch(Exception e){ 
    e.printStackTrace();
    out.println(sql);
  }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<h1>리스트 페이지</h1>\r\n");
      out.write("\r\n");

	if(word != null && !word.equals("")) {

      out.write("\r\n");
      out.write("		검색컬럼: ");
      out.print( key );
      out.write(" | 검색어: ");
      out.print( word );
      out.write(" | 검색된 갯수: ");
      out.print( (int)count );
      out.write('\r');
      out.write('\n');

	}

      out.write("\r\n");
      out.write("<a href=\"Logout.jsp\"><button type=\"button\">로그아웃</button></a>\r\n");
      out.write("<a href=\"Join.jsp\"><button type=\"button\">회원입력</button></a>\r\n");
      out.write("<br><br>\r\n");
      out.write("\r\n");
      out.write("<table border=\"1\">\r\n");
      out.write("   <tr>\r\n");
      out.write("      <td>기본키</td>\r\n");
      out.write("      <td>아이디</td>\r\n");
      out.write("      <td>비밀번호</td>\r\n");
      out.write("      <td>이름</td>\r\n");
      out.write("      <td>성별</td>\r\n");
      out.write("      <td>생일</td>\r\n");
      out.write("      <td>취미</td>\r\n");
      out.write("      <td>등록일</td>\r\n");
      out.write("      <td>파일</td>\r\n");
      out.write("   </tr>\r\n");
   
   while (rs.next()) {
      String idx = rs.getString("idx");
      String uid = rs.getString("uid");
      String upassword = rs.getString("upassword");
      String name = rs.getString("name");
      String sex = rs.getString("sex");
      String birth = rs.getString("birth");
      String hobby = rs.getString("hobby");
      String regdate = rs.getString("regdate");
      String upfile = rs.getString("upfile");
      String originalfile = rs.getString("originalfile");
      String originaldir = rs.getString("originaldir");
      //경로 폴더이름만 뽑기
	  int index = 0;
	  	if (originaldir != null) {
	  		index = originaldir.lastIndexOf("\\");
	  	}
	  	
	  	String extension ="";
		if (index > 0) {
			extension = originaldir.substring(index + 1);
			//System.out.println(extension); //확장자 시스템 출력
		}

      out.write("\r\n");
      out.write("   <tr>\r\n");
      out.write("      <td>");
      out.print( idx );
      out.write("</td>\r\n");
      out.write("      <td><a href=\"View.jsp?uid=");
      out.print( uid );
      out.write('"');
      out.write('>');
      out.print( uid );
      out.write("</a></td>\r\n");
      out.write("      <td>");
      out.print( upassword );
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print( name );
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print( sex );
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print( birth );
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print( hobby );
      out.write("</td>\r\n");
      out.write("      <td>");
      out.print( regdate );
      out.write("</td>\r\n");
      out.write("      <td><img alt=\"");
      out.print( originalfile );
      out.write("\" src=\"Download.jsp?uid=");
      out.print( uid );
      out.write("\" width=\"50\" height=\"50\"></td>\r\n");
      out.write("   </tr>   \r\n");

   }

      out.write("   \r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	int pageCount = ccount / scale + (ccount%scale==0?0:1);

	if (page_group_start>1) { 
      out.write("\r\n");
      out.write("    <a href=\"List.jsp?_page=");
      out.print( page_group_start-1 );
      out.write("&key=");
      out.print( key );
      out.write("&word=");
      out.print( word );
      out.write("\" class=\"aa\">◀</a>\r\n");
 
	}else {

      out.write("\r\n");
      out.write("		<a class=\"aa aadisable\" >◀</a>\r\n");

	}
	for (int i=page_group_start; i<=page_group_end; i++) {
		if(i==now_page) {

      out.write("\r\n");
      out.write("			<a href=\"List.jsp?_page=");
      out.print( i );
      out.write("&key=");
      out.print( key );
      out.write("&word=");
      out.print( word );
      out.write("\" class=\"aa aaa\">");
      out.print( i );
      out.write("</a>\r\n");

		}else if (i<=Math.ceil(dcount/10)) { //totalp

      out.write("\r\n");
      out.write("			<a href=\"List.jsp?_page=");
      out.print( i );
      out.write("&key=");
      out.print( key );
      out.write("&word=");
      out.print( word );
      out.write("\" class=\"aa\">");
      out.print( i );
      out.write("</a>\r\n");

		}
	}
	if (page_group_end<pageCount) { 

      out.write("\r\n");
      out.write("    	<a href=\"List.jsp?_page=");
      out.print( page_group_end+1 );
      out.write("&key=");
      out.print( key );
      out.write("&word=");
      out.print( word );
      out.write("\" class=\"aa\">▶</a>\r\n");

	}else {

      out.write("\r\n");
      out.write("		<a class=\"aa aadisable\">▶</a>\r\n");
	
	}

      out.write("\r\n");
      out.write("	<form method=\"get\">\r\n");
      out.write("	    <input type=\"number\" name=\"_page\" min=\"1\" max=\"");
      out.print( Math.ceil(dcount/10) );
      out.write("\" value=\"");
      out.print( now_page );
      out.write("\">\r\n");
      out.write("	    <input type=\"hidden\" name=\"key\" value=");
      out.print( key );
      out.write(">\r\n");
      out.write("		<input type=\"hidden\" name=\"word\" value=");
      out.print( word );
      out.write(">\r\n");
      out.write("	    <button type=\"submit\">이동</button>\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      out.write("	<form name=\"search_form\" method=\"get\">\r\n");
      out.write("		<select name=\"key\">\r\n");
      out.write("			<option value=\"uid\">아이디</option>\r\n");
      out.write("			<option value=\"name\">이름</option>\r\n");
      out.write("			<option value=\"hobby\">취미</option>\r\n");
      out.write("		</select>\r\n");
      out.write("		<input type=\"text\" name=\"word\">\r\n");
      out.write("		<button type=\"submit\">검색</button>\r\n");
      out.write("	</form>\r\n");
      out.write("\r\n");
      out.write("<br><br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");

if (rs != null){
   rs.close();
}

if (st != null){
   st.close();
}

if (conn != null)
{
   conn.close();
}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
