/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.108
 * Generated at: 2025-09-16 07:34:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import lib.DB;
import java.net.URLEncoder;
import java.sql.*;
import lib.DB;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/board/op_bot.jsp", Long.valueOf(1757484459299L));
    _jspx_dependants.put("/board/op_top.jsp", Long.valueOf(1758002288888L));
    _jspx_dependants.put("/board/op_paging_cal.jsp", Long.valueOf(1758007313952L));
    _jspx_dependants.put("/board/op_paging.jsp", Long.valueOf(1758008075873L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("lib.DB");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\r\n");

String sql = "select count(*) as cnt from board";
Connection conn = null;
Statement st = null;
ResultSet rs = null;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");

String key = request.getParameter("key");
String word = request.getParameter("word");
if (key == null) {key = "";}
if (word == null) {word = "";}

int totalp = 0;
int scale = 10; //페이지 당 게시물---------------------------------------------------------------
int offset = 0;
double count =0;
String _page = request.getParameter("_page");
if (_page == null) _page = "1";
int now_page = Integer.parseInt(_page); //현재 페이지
offset = (now_page-1)*scale ;

try {
	conn = DB.getConnection();
	st = conn.createStatement();
	rs = st.executeQuery(sql);
	rs.next();
	count = rs.getDouble("cnt");
	double countt = Math.ceil(count/scale);
	totalp = (int)countt;
	
	}catch (Exception e) {
		out.println(sql);
	}

int page_scale = 10; //보여지는 페이지의 수 ------------------------------------------------------
int page_group = (int)Math.ceil((double)totalp/page_scale);
int page_group_start = ((now_page-1)/page_scale)*page_scale+1;
int page_group_end = page_group_start+page_scale-1;
if (page_group_end>totalp) {
	page_group_end=totalp;
}

try {
	conn = DB.getConnection();
	
	if(word != null && !word.equals("")) {
		sql = " SELECT count(*) as cnt from board where "+key+" like '%"+word+"%'";
	}else {
		sql = " SELECT count(*) as cnt from board ";
	}
	
}catch (Exception e) {
	System.out.println(sql);
}

	st = conn.createStatement();
   	rs = st.executeQuery(sql);
   	rs.next();
   	count = rs.getInt("cnt");
   	double dcount = count;
   	int ccount = (int)count;
    
    

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>게시판</title>\r\n");
      out.write("<style>\r\n");
      out.write("*{\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".wwrite {\r\n");
      out.write("	padding: 8px 16px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    background-color: #4CAF50;\r\n");
      out.write("    color: white;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: background-color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write(".wwrite:hover {\r\n");
      out.write("    background-color: #0056b3;\r\n");
      out.write("}\r\n");
      out.write("/*페이징*/\r\n");
      out.write(".aa {\r\n");
      out.write("	color: black;\r\n");
      out.write("    padding: 8px 16px;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    transition: background-color .3s;\r\n");
      out.write("    border: 1px solid #ddd;\r\n");
      out.write("    margin: 0 4px;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("}\r\n");
      out.write(".aah:hover:not(.active) {\r\n");
      out.write("	background-color: #ddd;\r\n");
      out.write("}\r\n");
      out.write(".aaa {\r\n");
      out.write("	background-color: #4CAF50;\r\n");
      out.write("    color: white;\r\n");
      out.write("    border: 1px solid #4CAF50;\r\n");
      out.write("}\r\n");
      out.write(".aax {\r\n");
      out.write("	color: gray;\r\n");
      out.write("}\r\n");
      out.write("/*검색*/\r\n");
      out.write(".search-form {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    gap: 8px; /* 요소들 사이의 간격 */\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    background-color: #f8f9fa;\r\n");
      out.write("    border: 1px solid #e9ecef;\r\n");
      out.write("    border-radius: 8px;\r\n");
      out.write("    max-width: 500px;\r\n");
      out.write("    margin: 20px auto; /* 중앙 정렬 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search-form select,\r\n");
      out.write(".search-form input[type=\"text\"] {\r\n");
      out.write("    padding: 8px 12px;\r\n");
      out.write("    border: 1px solid #ced4da;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    color: #495057;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search-form select {\r\n");
      out.write("    background-color: #fff;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search-form input[type=\"text\"] {\r\n");
      out.write("    flex-grow: 1; /* 남은 공간을 채우도록 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search-form button {\r\n");
      out.write("    padding: 8px 16px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    background-color: #4CAF50;\r\n");
      out.write("    color: white;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: background-color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search-form button:hover {\r\n");
      out.write("    background-color: #0056b3;\r\n");
      out.write("}\r\n");
      out.write("/*게시판 테이블*/\r\n");
      out.write(".board-table {\r\n");
      out.write("    width: 80%;\r\n");
      out.write("    border-collapse: collapse;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board-table th, .board-table td {\r\n");
      out.write("    padding: 12px 15px;\r\n");
      out.write("    border: 1px solid #dee2e6;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 첫 번째 행 (헤더) 강조 및 호버 효과 제거 */\r\n");
      out.write(".board-table thead tr {\r\n");
      out.write("    background-color: #4CAF50; /* 더 진한 배경색 */\r\n");
      out.write("    color: white; /* 글씨색을 흰색으로 변경 */\r\n");
      out.write("    font-size: 15px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 본문 (tbody) 행 스타일 */\r\n");
      out.write(".board-table tbody tr:nth-child(even) {\r\n");
      out.write("    background-color: #f8f9fa;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board-table tbody tr:hover {\r\n");
      out.write("    background-color: #e2e6ea;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board-table a {\r\n");
      out.write("    color: #007bff;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board-table a:hover {\r\n");
      out.write("    text-decoration: underline;\r\n");
      out.write("}\r\n");
      out.write(".td50 {\r\n");
      out.write("	width: 50%;\r\n");
      out.write("}\r\n");
      out.write(".td10 {\r\n");
      out.write("	width: 10%;\r\n");
      out.write("}\r\n");
      out.write(".td20 {\r\n");
      out.write("	width: 20%;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");


try {
	conn = DB.getConnection();
	
	if(word != null && !word.equals("")) {
		sql = "SELECT b.*, m.name AS memname, COUNT(c.bidx) AS comment_count FROM board b LEFT JOIN member m ON b.uid = m.uid LEFT JOIN comment c ON b.idx = c.bidx WHERE b."+key+" LIKE '%"+word+"%' GROUP BY b.idx ORDER BY b.idx DESC limit "+offset+"," + scale;
	} else {
		sql = "SELECT b.*, m.name AS memname, COUNT(c.bidx) AS comment_count FROM board b LEFT JOIN member m ON b.uid = m.uid LEFT JOIN comment c ON b.idx = c.bidx GROUP BY b.idx ORDER BY b.idx DESC limit "+offset+"," + scale;
	}
	
	
	st = conn.createStatement();
	rs = st.executeQuery(sql);
	
}catch(Exception e){ 
    e.printStackTrace();
    out.println(sql);
}


      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

String login_id = "";
login_id = (String)session.getAttribute("ss_check");
String login_idx = "";
String login_name = "";
String login_upfile = "";
int login_rank = -1;

if(login_id == null || login_id.equals("") || login_id.equals("null")) {
}else {
	String sqll = null;
	Connection connl =null;
	PreparedStatement psl = null;
	ResultSet rsl = null;
	
	try {
		
		connl = DB.getConnection();
		
		sqll = "SELECT * FROM member WHERE uid=?";
		psl = connl.prepareStatement(sqll);
		psl.setString(1, login_id);
		
		rsl = psl.executeQuery();
		rsl.next();
		
		login_idx = rsl.getString("idx");
		login_name = rsl.getString("name");
		login_upfile = rsl.getString("upfile");
		login_rank = rsl.getInt("member_rank");
		
	}catch (Exception e) {
		out.println(e.toString());
		out.println(sqll);
	}
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("*{\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write(".board-header {\r\n");
      out.write("    background-color: #f8f9fa;\r\n");
      out.write("    border-bottom: 2px solid #e9ecef;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: space-between;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board-header h1 {\r\n");
      out.write("    font-size: 28px;\r\n");
      out.write("    color: #343a40;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    text-align: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board-header h1 a {\r\n");
      out.write("	font-size: 28px;\r\n");
      out.write("    color: #343a40;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board-header nav ul {\r\n");
      out.write("    list-style: none;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    gap: 50px;\r\n");
      out.write("    text-align: right;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board-header nav li a {\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    /*color: #495057;*/\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    font-weight: 500;\r\n");
      out.write("    transition: color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("header img {\r\n");
      out.write("	max-width: 30px;\r\n");
      out.write("    object-fit: contain;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    border: 1px solid #ced4da;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logout-btn {\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    padding: 8px 16px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    background-color: gray;\r\n");
      out.write("    color: white;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    transition: background-color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write(".logout-btn:hover {\r\n");
      out.write("    background-color: #dc3545;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".mypage-btn {\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    padding: 8px 16px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    background-color: gray;\r\n");
      out.write("    color: white;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    transition: background-color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write(".mypage-btn:hover {\r\n");
      out.write("    background-color: #007bff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".user-info {\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    padding: 8px 16px;\r\n");
      out.write("    border: 1px solid gray;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    color: black;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    font-weight: 500;\r\n");
      out.write("    transition: background-color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
 if(login_id == null || login_id.equals("") || login_id.equals("null")) { 
      out.write("\r\n");
      out.write("<header class=\"board-header\">\r\n");
      out.write("    <h1><a href=\"../board_proc/main_proc.jsp\">게 시 판</a></h1>\r\n");
      out.write("    <nav>\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li>닉네임 : 비로그인</li>\r\n");
      out.write("            <li><a href=\"#\">@</a></li>\r\n");
      out.write("            <li><a href=\"#\">@</a></li>\r\n");
      out.write("            <li><a href=\"../member/Login.jsp\">로그인 하기</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </nav>\r\n");
      out.write("</header>\r\n");
 }else { 
      out.write("\r\n");
      out.write("<header class=\"board-header\">\r\n");
      out.write("    <h1><a href=\"../board_proc/main_proc.jsp\">게 시 판</a></h1>\r\n");
      out.write("    <nav>\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li><span class=\"user-info\">닉네임 : ");
      out.print( login_name );
      out.write("</span></li>\r\n");
      out.write("            ");
 if (login_upfile == null || login_upfile.equals("")) { 
      out.write("\r\n");
      out.write("            	<li> &nbsp; &nbsp; &nbsp; &nbsp; </li>\r\n");
      out.write("            ");
 }else { 
      out.write("\r\n");
      out.write("            	<li><img alt=\"X\" src=\"../member/Download.jsp?uid=");
      out.print( login_id );
      out.write("\"></li>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("            <li><a href=\"../member/View.jsp?uid=");
      out.print( login_id );
      out.write("\" class=\"mypage-btn\">마이페이지</a></li>\r\n");
      out.write("            <li><a href=\"../member/Logout.jsp\" class=\"logout-btn\">로그아웃</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </nav>\r\n");
      out.write("</header>\r\n");
 } 
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<h1>리스트</h1><br>\r\n");

	if(word != null && !word.equals("")) {

      out.write("\r\n");
      out.write("		검색컬럼: ");
      out.print( key );
      out.write(" | 검색어: ");
      out.print( word );
      out.write(" | 검색된 갯수: ");
      out.print( (int)count );
      out.write('\r');
      out.write('\n');

	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<table class=\"board-table\">\r\n");
      out.write("	<thead>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td class=\"td10\">번호</td>\r\n");
      out.write("			<td class=\"td50\">제목</td>\r\n");
      out.write("			<td class=\"td10\">작성자</td>\r\n");
      out.write("			<td class=\"td20\">작성일</td>\r\n");
      out.write("			<td class=\"td10\">조회수</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</thead>\r\n");

   while (rs.next()) {
      String idx = rs.getString("idx");
      String name = rs.getString("name");
      String title = rs.getString("title");
      String content = rs.getString("content");
      String hit = rs.getString("hit");
      String regdate = rs.getString("regdate");
      String ip = rs.getString("ip");
      String comment_count = rs.getString("comment_count");
   

      out.write("\r\n");
      out.write("	<tbody>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>");
      out.print( idx );
      out.write("</td>\r\n");
      out.write("			<td style=\"text-align: left;\"><a href=\"view.jsp?idx=");
      out.print( idx );
      out.write('"');
      out.write('>');
      out.print( title );
 if(!comment_count.equals("0")){ 
      out.write(' ');
      out.write('(');
      out.print( comment_count );
      out.write(')');
      out.write(' ');
 } 
      out.write("</a></td>\r\n");
      out.write("			<td>");
      out.print( name );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print( regdate );
      out.write("</td>\r\n");
      out.write("			<td>");
      out.print( hit );
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</tbody>\r\n");
 } 
      out.write("\r\n");
      out.write("	\r\n");
      out.write("</table>\r\n");
      out.write("<br>\r\n");
      out.write("<a href=\"write.jsp\"><button type=\"button\" class=\"wwrite\">글쓰기</button></a>\r\n");
      out.write("<br><br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");

	int pageCount = ccount / scale + (ccount%scale==0?0:1);

	if (page_group_start>1) { 
      out.write("\r\n");
      out.write("    <a href=\"list.jsp?_page=");
      out.print( page_group_start-1 );
      out.write("&key=");
      out.print( key );
      out.write("&word=");
      out.print( word );
      out.write("\" class=\"aa aah\">◀</a>\r\n");
 
	}else {

      out.write("\r\n");
      out.write("		<a class=\"aa aax\" >◀</a>\r\n");

	}
	for (int i=page_group_start; i<=page_group_end; i++) {
		if(i==now_page) {

      out.write("\r\n");
      out.write("			<a href=\"?_page=");
      out.print( i );
      out.write("&key=");
      out.print( key );
      out.write("&word=");
      out.print( word );
      out.write("\" class=\"aa aaa\">");
      out.print( i );
      out.write("</a>\r\n");

		}else if (i<=Math.ceil(dcount/scale)) { //totalp

      out.write("\r\n");
      out.write("			<a href=\"?_page=");
      out.print( i );
      out.write("&key=");
      out.print( key );
      out.write("&word=");
      out.print( word );
      out.write("\" class=\"aa aah\">");
      out.print( i );
      out.write("</a>\r\n");

		}
	}
	if (page_group_end<pageCount) { 

      out.write("\r\n");
      out.write("    	<a href=\"?_page=");
      out.print( page_group_end+1 );
      out.write("&key=");
      out.print( key );
      out.write("&word=");
      out.print( word );
      out.write("\" class=\"aa aah\">▶</a>\r\n");

	}else {

      out.write("\r\n");
      out.write("		<a class=\"aa aax\">▶</a>\r\n");
	
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<form name=\"search_form\" method=\"get\" class=\"search-form\">\r\n");
      out.write("		<select name=\"key\">\r\n");
      out.write("			<option value=\"name\">작성자</option>\r\n");
      out.write("			<option value=\"title\">제목</option>\r\n");
      out.write("			<option value=\"content\">내용</option>\r\n");
      out.write("		</select>\r\n");
      out.write("		<input type=\"text\" name=\"word\">\r\n");
      out.write("		<button type=\"submit\">검색</button>\r\n");
      out.write("	</form>\r\n");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".board-footer {\r\n");
      out.write("    background-color: #f8f9fa;\r\n");
      out.write("    border-top: 1px solid #e9ecef;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    margin-top: 30px;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: space-around;\r\n");
      out.write("    align-items: flex-start;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin-left: auto;\r\n");
      out.write("    margin-right: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board-footer > div {\r\n");
      out.write("    flex: 1;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    color: #6c757d;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    line-height: 1.5;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board-footer > div:not(:last-child) {\r\n");
      out.write("    border-right: 1px solid #e9ecef;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<footer class=\"board-footer\">\r\n");
      out.write("    <div>내용</div>\r\n");
      out.write("    <div>내용</div>\r\n");
      out.write("    <div>내용</div>\r\n");
      out.write("    <div>내용</div>\r\n");
      out.write("</footer>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
