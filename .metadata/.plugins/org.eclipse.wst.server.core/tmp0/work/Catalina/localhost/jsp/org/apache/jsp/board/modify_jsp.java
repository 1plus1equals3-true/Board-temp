/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.108
 * Generated at: 2025-09-15 06:10:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import lib.DB;

public final class modify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/board/op_logincheck.jsp", Long.valueOf(1757489641120L));
    _jspx_dependants.put("/board/op_top.jsp", Long.valueOf(1757915549961L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("java.util.Arrays");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("lib.DB");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("       \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Modify</title>\r\n");
      out.write("<style>\r\n");
      out.write("*{\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write(".write-form table {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    border-collapse: collapse;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    margin: 20px auto;\r\n");
      out.write("    max-width: 600px;\r\n");
      out.write("    background-color: #fff;\r\n");
      out.write("    border: 1px solid #dee2e6;\r\n");
      out.write("    border-radius: 8px;\r\n");
      out.write("    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".write-form td {\r\n");
      out.write("    padding: 15px;\r\n");
      out.write("    border: 1px solid #e9ecef;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".write-form td:first-child {\r\n");
      out.write("    background-color: #f8f9fa;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    color: #495057;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    width: 120px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".write-form input[type=\"text\"],\r\n");
      out.write(".write-form textarea {\r\n");
      out.write("    width: calc(100% - 24px);\r\n");
      out.write("    padding: 10px 12px;\r\n");
      out.write("    border: 1px solid #ced4da;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("    text-align: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".write-form textarea {\r\n");
      out.write("    height: 200px;\r\n");
      out.write("    resize: vertical;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".write-form .button-container {\r\n");
      out.write("    text-align: right;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".write-form input[type=\"submit\"],\r\n");
      out.write(".write-form .btn-cancel {\r\n");
      out.write("    padding: 10px 20px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: background-color 0.3s ease;\r\n");
      out.write("    margin-left: 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".write-form input[type=\"submit\"] {\r\n");
      out.write("    background-color: #007bff;\r\n");
      out.write("    color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".write-form input[type=\"submit\"]:hover {\r\n");
      out.write("    background-color: #0056b3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".write-form .btn-cancel {\r\n");
      out.write("    background-color: #6c757d;\r\n");
      out.write("    color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".write-form .btn-cancel:hover {\r\n");
      out.write("    background-color: #5a6268;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* a 태그 안에 button을 넣었을 때 스타일 */\r\n");
      out.write(".write-form a {\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

String idx = request.getParameter("idx");
String delpass = request.getParameter("delpass");

Connection conn=null;
Statement st = null;
ResultSet rs = null;
String sql = null;

try{
    conn = DB.getConnection();
    
   sql = " SELECT b.*, m.upassword as pass FROM board b LEFT JOIN member m ON b.uid = m.uid where b.idx = '"+idx+"' ";

   st = conn.createStatement();
   rs = st.executeQuery(sql);

  }catch(Exception e){ 
    e.printStackTrace();
    out.println(sql);
 }
String uid = "";
String pass = "";
String title = "";
String content = "";
String ip = "";
String originalfile = "";

if(rs != null){
	rs.next();
	title = rs.getString("title");
	content = rs.getString("content");
	ip = rs.getString("ip");
	uid = rs.getString("uid");
	pass = rs.getString("pass");
	originalfile = rs.getString("originalfile");
}

      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');

String login_id = "";
login_id = (String)session.getAttribute("ss_check");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".board-header {\r\n");
      out.write("    background-color: #f8f9fa;\r\n");
      out.write("    border-bottom: 2px solid #e9ecef;\r\n");
      out.write("    padding: 20px;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: space-between;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board-header h1 {\r\n");
      out.write("    font-size: 28px;\r\n");
      out.write("    color: #343a40;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    text-align: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board-header h1 a {\r\n");
      out.write("	font-size: 28px;\r\n");
      out.write("    color: #343a40;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board-header nav ul {\r\n");
      out.write("    list-style: none;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    gap: 50px;\r\n");
      out.write("    text-align: right;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board-header nav li a {\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    color: #495057;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    font-weight: 500;\r\n");
      out.write("    transition: color 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".board-header nav li a:hover {\r\n");
      out.write("    color: #007bff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 라이트 모드 (기본값) */\r\n");
      out.write(":root {\r\n");
      out.write("  --background-color: #ffffff;\r\n");
      out.write("  --text-color: #1a1a1a;\r\n");
      out.write("  --button-background-color: #f0f0f0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
 if(login_id == null || login_id.equals("") || login_id.equals("null")) { 
      out.write("\r\n");
      out.write("<header class=\"board-header\">\r\n");
      out.write("    <h1><a href=\"../board_proc/main_proc.jsp\">게 시 판</a></h1>\r\n");
      out.write("    <nav>\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li>로그인 ID : 비로그인</li>\r\n");
      out.write("            <li><a href=\"#\">@</a></li>\r\n");
      out.write("            <li><a href=\"#\">@</a></li>\r\n");
      out.write("            <li><a href=\"../member/Login.jsp\">로그인 하기</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </nav>\r\n");
      out.write("</header>\r\n");
 }else { 
      out.write("\r\n");
      out.write("<header class=\"board-header\">\r\n");
      out.write("    <h1><a href=\"../board_proc/main_proc.jsp\">게 시 판</a></h1>\r\n");
      out.write("    <nav>\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li>로그인 ID : ");
      out.print( login_id );
      out.write("</li>\r\n");
      out.write("            <li><a href=\"#\">@</a></li>\r\n");
      out.write("            <li><a href=\"#\">@</a></li>\r\n");
      out.write("            <li><a href=\"../member/Logout.jsp\">로그아웃</a></li>\r\n");
      out.write("        </ul>\r\n");
      out.write("    </nav>\r\n");
      out.write("</header>\r\n");
 } 
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

if(login_id == null || login_id.equals(""))
{

      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("alert(\"로그인 하세요.\");\r\n");
      out.write("location.replace(\"../member/Login.jsp\");\r\n");
      out.write("</script>\r\n");

	return;
}

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

if(login_id == null || !login_id.equals(uid))
{
	
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("	alert(\"글을 작성한 계정이 아닙니다.\");\r\n");
      out.write("	location.replace(\"view.jsp?idx=");
      out.print( idx );
      out.write("\");\r\n");
      out.write("	</script>\r\n");
      out.write("	");

	return;
}

if(delpass == null || !delpass.equals(pass))
{
	
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("	alert(\"비밀번호가 틀렸습니다.\");\r\n");
      out.write("	location.replace(\"view.jsp?idx=");
      out.print( idx );
      out.write("\");\r\n");
      out.write("	</script>\r\n");
      out.write("	");

	return;
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<h1>수정</h1><br>\r\n");
      out.write("<form action=\"modify_proc.jsp\" method=\"post\" enctype=\"multipart/form-data\" class=\"write-form\">\r\n");
      out.write("	<input type=\"hidden\" name=\"idx\" value=\"");
      out.print( idx );
      out.write("\">\r\n");
      out.write("	<input type=\"hidden\" name=\"ip\" value=\"");
      out.print( ip );
      out.write("\">\r\n");
      out.write("	<table>\r\n");
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>제목</td>\r\n");
      out.write("			<td><input type=\"text\" name=\"writetitle\" value=\"");
      out.print( title );
      out.write("\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>내용</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				<textarea class=\"text\" name=\"writetext\">");
      out.print( content );
      out.write("</textarea>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>파일</td>\r\n");
      out.write("			<td>\r\n");
      out.write("			<input type=\"checkbox\" name=\"filecheck\" id=\"myCheckbox\" value=\"on\" onchange=\"toggleContent()\">\r\n");
      out.write("			<label for=\"myCheckbox\">새로운 파일 업로드</label>\r\n");
      out.write("	\r\n");
      out.write("			<div id=\"additionalContent\" style=\"display: none;\">\r\n");
      out.write("			    <input type=\"file\" name=\"upfile\" accept=\".gif, .jpg, .png\"><br>\r\n");
      out.write("			</div>\r\n");
      out.write("			<script>\r\n");
      out.write("			function toggleContent() {\r\n");
      out.write("			    var checkbox = document.getElementById('myCheckbox');\r\n");
      out.write("			    var content = document.getElementById('additionalContent');\r\n");
      out.write("			\r\n");
      out.write("			    if (checkbox.checked) {\r\n");
      out.write("			        content.style.display = 'block'; \r\n");
      out.write("			    } else {\r\n");
      out.write("			        content.style.display = 'none';\r\n");
      out.write("			    }\r\n");
      out.write("			}\r\n");
      out.write("			</script>\r\n");
      out.write("			\r\n");
      out.write("			");

				if (originalfile != null) {
			
      out.write("\r\n");
      out.write("					<br>기존 파일 : ");
      out.print( originalfile );
      out.write("\r\n");
      out.write("			");

				}
			
      out.write("\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=\"2\">\r\n");
      out.write("				<input type=\"submit\" value=\"수정\">\r\n");
      out.write("				<a href=\"list.jsp\"><button type=\"button\" class=\"btn-cancel\">취소</button></a>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		\r\n");
      out.write("	</table>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
