package myLib;

import java.net.URLDecoder;
import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.sql.*;

import java.sql.PreparedStatement;

import java.sql.Connection;


public class DB {
   public static final String root = "D:\\JGS\\data";
	
   public static Connection getConnection() throws Exception{
      
      String jdbcUrl = "jdbc:mysql://localhost:3306/jsp_db";
      String dbId = "user"; // 설정된 id
      String dbPass = "1234"; // 설정된 password
 
      Class.forName("com.mysql.cj.jdbc.Driver"); 
      Connection con = DriverManager.getConnection(jdbcUrl,dbId ,dbPass);
      
      return con;
   }
   
   public static boolean CloseConnection( ResultSet rs, PreparedStatement pstmt, Connection conn) {
	   try {
		   if(rs != null){
				rs.close();
			}
		   if(pstmt != null){
				pstmt.close();
			}
		   if(conn != null){
				conn.close();
			}
		   return true;
		   
	   }catch(Exception e) {
		   e.printStackTrace();
		   return false;
	   }
   }
   
   public static boolean CloseConnection( PreparedStatement pstmt, Connection conn) {
	   return CloseConnection( null, pstmt, conn);
   }
   
   public static boolean CloseConnection(Connection conn) {
	   return CloseConnection( null, null, conn);
   }
   
   public static String errMsg(String alert, String loc) {
	   if(loc.equals("back")) {
		   return "<script> alert(\""+alert+"\"); history.back(); </script>";
	   }
	   return "<script> alert(\""+alert+"\"); location.replace(\""+loc+"\"); </script>";
   }
   
   public static String  Encoder(String text) {
	   if (text != null){
			try{
				return URLEncoder.encode(text, StandardCharsets.UTF_8);
			}catch(Exception e){
				e.printStackTrace();
				return "";
			}
		}else {
			return "";
		}
   }
   public static String  Decoder(String text) {
	   if (text != null){
			try{
				return URLDecoder.decode(text, StandardCharsets.UTF_8);
			}catch(Exception e){
				e.printStackTrace();
				return "";
			}
		}else {
			return "";
		}
   }
}
   
   
   
   

